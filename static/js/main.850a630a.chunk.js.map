{"version":3,"sources":["images/bobbys-party.png","images/IMG-6331.JPG","images/IMG_6032.jpeg","images/red-bats.jpeg","images/skull-stamp.JPG","images/space-walk.JPG","images/WatercolorSkull.jpg","images/LaserLinks.png","images/MrLewis.png","images/Gardenseedr.png","images/WeatherMap.png","images/DiceRoller.png","images/Gradient.png","serviceWorker.js","Components/Nav.js","Components/footer.js","Components/Header.js","Components/MyInfo.js","Components/MainContent.js","Components/Products.js","Components/Projects.js","data/artProducts.js","data/ProjectsData.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","AmPm","Footer","className","React","Component","Header","date","Date","styles","fontSize","getHours","color","Nav","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","style","getMinutes","slice","MainContent","Products","this","props","product","name","price","height","src","url","alt","description","Projects","project","title","width","artProducts","require","ProjectsData","App","projectComponents","map","item","key","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.850a630a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bobbys-party.0e4018f6.png\";","module.exports = __webpack_public_path__ + \"static/media/IMG-6331.2774b33f.JPG\";","module.exports = __webpack_public_path__ + \"static/media/IMG_6032.f1938d5f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/red-bats.5d573cac.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/skull-stamp.18e932ca.JPG\";","module.exports = __webpack_public_path__ + \"static/media/space-walk.e04564db.JPG\";","module.exports = __webpack_public_path__ + \"static/media/WatercolorSkull.be64cedb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/LaserLinks.cfad92b0.png\";","module.exports = __webpack_public_path__ + \"static/media/MrLewis.c91525af.png\";","module.exports = __webpack_public_path__ + \"static/media/Gardenseedr.76ac9e42.png\";","module.exports = __webpack_public_path__ + \"static/media/WeatherMap.9127a965.png\";","module.exports = __webpack_public_path__ + \"static/media/DiceRoller.a4542f79.png\";","module.exports = __webpack_public_path__ + \"static/media/Gradient.d306d55c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport {nav, button, DropdownButton} from \"react-bootstrap\";\n\n\nconst date = new Date();\n\nconst styles = {\n    fontSize: 30\n};\n\nlet AmPm;\nif (date.getHours() % 12 < 11) {\n    styles.color = \"red\";\n    AmPm = \"PM\"\n} else {\n    AmPm = \"AM\";\n    styles.color = \"blue\"\n}\n\n\nclass Nav extends React.Component {\n    render() {\n        return (\n            <nav className=\"nav navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\n                <a className=\"navbar-brand\" href=\"#\">Andrew Ball</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item active\">\n                            <a className=\"nav-link\" href=\"#\">Top Of Page<span className=\"sr-only\">(current)</span></a>\n                        </li>\n                    </ul>\n                    <h1 style={styles}>{`${date.getHours() % 12 }:${('0' + date.getMinutes()).slice(-2)} ${AmPm}`}</h1>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Nav;","import React from \"react\";\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"footer\">\n                <h3>This Is My Footer</h3>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;","import React from \"react\";\n\n\nclass Header extends React.Component {\n\n    render() {\n        var firstName = \"Andrew\";\n        var lastName = \"Ball\";\n        var someWord = \"Another Dimension\";\n        return (\n            <header className=\"App-header\">\n                <p className=\"main-title\">{`${firstName} ${lastName}`}</p>\n                <h3>In {someWord}</h3>\n            </header>\n        )\n    }\n}\n\nexport default Header;","import React from \"react\";\n\n\nclass MyInfo extends React.Component {\n    render() {\n        return (\n            <div>\n                <p className=\"other-works\">LINKS TO OTHER WORKS</p>\n                <p><a href=\"https://andrewball79.github.io/laserLinks/DiceRoller\">DICE ROLLER</a></p>\n                <p><a href=\"https://andrewball79.github.io/laserLinks/mrLewis\">MR. LEWIS & THE FUNERAL 5</a></p>\n                <p><a href=\"https://gardenseedr.com\">GARDENSEEDR</a></p>\n                <p><a href=\"https://andrewball79.github.io/laserLinks/weatherMap\">WEATHER MAP</a></p>\n                <p><a href=\"https://andrewball79.github.io/laserLinks/gradientLife\">GRADIENT MIND</a></p>\n            </div>\n        )\n    }\n}\n\nexport default MyInfo","import React from \"react\";\n\nclass MainContent extends React.Component{\n    render() {\n        return(\n        <div className=\"mainContent\">\n        </div>\n        )\n    }\n}\n\nexport default MainContent;","import React from \"react\";\n\nclass Products extends React.Component {\n    render() {\n        return (\n            <div>\n                <h2>{this.props.product.name}</h2>\n                <h3>Price: {this.props.product.price}</h3>\n                <img height=\"400px\" src={this.props.product.url} alt={this.props.product.alt}/>\n                <h3>{this.props.product.description}</h3>\n                <hr/>\n            </div>\n        )\n    }\n}\n\nexport default Products;","import React from \"react\";\n\nclass Projects extends React.Component {\n    render() {\n        return (\n            <div className=\"projects\">\n                <br/>\n                <p className=\"project-header\">{this.props.project.title}</p>\n                <a href={this.props.project.href}>\n                <img width=\"90%\"  src={this.props.project.url} alt={this.props.project.alt}/>\n                </a>\n                <br/><br/>\n                <h5 className=\"projectsDescription\">{this.props.project.description}</h5>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","const artProducts = [\n    {\n        id: \"1\",\n        name: \"Bobby's Party\",\n        price: \"not available\",\n        description: \"A beautiful and exciting party for Bob.\",\n        url: require(\"../images/bobbys-party.png\"),\n        alt: \"Bobby's Party\"\n    },\n    {\n        id: \"2\",\n        name: \"Diamond Eyes\",\n        price: \"$150.00\",\n        description: \"This Is a Piece Of Art\",\n        url: require(\"../images/IMG-6331.JPG\"),\n        alt: \"Diamond Eyes\"\n    },\n    {\n        id: \"3\",\n        name: \"Bats Suck\",\n        price: \"$150.00\",\n        description: \"Bats want to suck...\",\n        url: require(\"../images/IMG_6032.jpeg\"),\n        alt: \"Bats Suck\"\n    },\n    {\n        id: \"4\",\n        name: \"Red Bats Suck Too\",\n        price: \"$150.00\",\n        description: \"Bat's that are red... same\",\n        url: require(\"../images/red-bats.jpeg\"),\n        alt: \"Red Bats Suck\"\n    },\n    {\n        id: \"5\",\n        name: \"Skully\",\n        price: \"$150.00\",\n        description: \"Large And In Charge\",\n        url: require(\"../images/skull-stamp.JPG\"),\n        alt: \"Diamond Eyes\"\n    },\n    {\n        id: \"6\",\n        name: \"Space Walk\",\n        price: \"$150.00\",\n        description: \"Walking In Space\",\n        url: require(\"../images/space-walk.JPG\"),\n        alt: \"Space Walk\"\n    },\n    {\n        id: \"7\",\n        name: \"Watercolor Skull\",\n        price: \"$150.00\",\n        description: \"A watercolor of a skull\",\n        url: require(\"../images/WatercolorSkull.jpg\"),\n        alt: \"Watercolor Skull\"\n    }\n];\n\nexport default artProducts","const ProjectsData = [\n    {\n        id: 1,\n        title:\"Laser Links\",\n        description: \"Design is tied together with animation seamlessly obscuring links to other works within animated polygons.\",\n        url: require(\"../images/LaserLinks.png\"),\n        alt: \"Laser Links\",\n        href: \"https://andrewball79.github.io/laserLinks\"\n    },\n    {\n        id: 2,\n        title:\"Mr. Lewis And The Funeral 5\",\n        description: \"Bootstrap, HTML, CSS, JQuery, and a Spotify player are tucked behind animated tabs on this band page.\",\n        url: require(\"../images/MrLewis.png\"),\n        alt: \"Mr. Lewis\",\n        href: \"https://andrewball79.github.io/laserLinks/mrLewis\"\n    },\n    {\n        id: 3,\n        title:\"Gardenseedr\",\n        description: \"GardenSeedr is a desktop gardening assistant developed during the coronavirus outbreak as an aid to new gardeners with planting ideas and placement. Two separate API calls, OpenWeather API and OpenFarm API were used for weather updates and crop information respectively. A virtual garden grid is used for crop placement.\",\n        url: require(\"../images/Gardenseedr.png\"),\n        alt: \"Gardenseedr\",\n        href: \"https://gardenseedr.com\"\n    },\n    {\n        id: 4,\n        title:\"Weather Map\",\n        description: \"The Weather Map is a Javascript API project to create a user interactive application where the user can input location, latitude or longitude, or drag a marker on the map to show the realtime weather forecast in a given location through Dark Sky API and MapBox API.\",\n        url: require(\"../images/WeatherMap.png\"),\n        alt: \"Weather Map\",\n        href: \"https://andrewball79.github.io/laserLinks/weatherMap\"\n    },\n    {\n        id: 5,\n        title:\"Dice Roller\",\n        description: \"This is a page layout exhibiting clean, bright design principles using HTML, CSS, JavaScript, and Jquery. There are multiple die choices and a selectable number of rolls. It is meant to be used as a supplemental to any tabletop games where dice are used.\",\n        url: require(\"../images/DiceRoller.png\"),\n        alt: \"Bobby's Party\",\n        href: \"https://andrewball79.github.io/laserLinks/DiceRoller\"\n    },\n    {\n        id: 6,\n        title:\"Gradient Mind\",\n        description: \"Gradient Mind is an experiment with pure CSS and HTML showcasing some interesting animation, layout and design.\",\n        url: require(\"../images/Gradient.png\"),\n        alt: \"Gradient Mind\",\n        href: \"https://andrewball79.github.io/laserLinks/gradientLife\"\n    }\n];\n\nexport default ProjectsData","import React from 'react';\nimport './App.css';\nimport Footer from \"./Components/footer\";\nimport MyInfo from \"./Components/MyInfo\";\nimport Header from \"./Components/Header\";\nimport Nav from \"./Components/Nav\";\nimport MainContent from \"./Components/MainContent\";\nimport Products from \"./Components/Products\";\nimport Projects from \"./Components/Projects\";\nimport artProducts from \"./data/artProducts\";\nimport ProjectsData from \"./data/ProjectsData\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nclass App extends React.Component {\n    // constructor() {\n    //     super();\n    //     this.state = {\n    //         todos: toDoData,\n    //         isLoading: false,\n    //         isLoggedIn: false,\n    //         character: {},\n    //\n    //     };\n    //     this.handleChange = this.handleChange.bind(this);\n    //     this.handleClick = this.handleClick.bind(this);\n    //\n    //\n    // }\n\n    // componentDidMount() {\n    //     this.setState({isLoading: true});\n    //     fetch(\"https://swapi.dev/api/people/19\")\n    //         .then(response => response.json())\n    //         .then(data => {\n    //             this.setState({\n    //                 isLoading: false,\n    //                 character: data\n    //             })\n    //         });\n    // }\n\n    // handleClick() {\n    //     this.setState(prevState => {\n    //         return {\n    //             isLoggedIn: !prevState.isLoggedIn\n    //         }\n    //     })\n    // }\n\n    // handleChange(id) {\n    //     this.setState(prevState => {\n    //         const updatedTodos = prevState.todos.map(todo => {\n    //             if (todo.id === id) {\n    //                 todo.completed = !todo.completed\n    //             }\n    //             return todo\n    //         });\n    //         console.log(updatedTodos);\n    //         return {\n    //             todos: updatedTodos\n    //         }\n    //     })\n    // }\n\n    render() {\n        const projectComponents = ProjectsData.map(item => <Projects key={item.id} item={item} project={item}/>);\n        const productsComponents = artProducts.map(item => <Products key={item.id} product={item}/>);\n        // const text = this.state.isLoading ? \"Loading...\" : this.state.character.name;\n        // let buttonText = this.state.isLoggedIn ? \"Log Out\" : \"Log In\";\n        // const toDoItems = this.state.todos.map(item => <ToDoItem key={item.id} item={item} handleChange={this.handleChange}/>);\n        // const jokeComponents = jokesData.map(joke => <Jokes key={joke.id} question={joke.question} punchLine={joke.punchLine}/>);\n\n\n        return (\n            <div className=\"App\">\n                <Nav/>\n                <Header/>\n                <MainContent/>\n                {/*{!this.state.isLoggedIn ? <h1>Not Logged In</h1> : <Conditional/>}*/}\n                {/*<button onClick={this.handleClick}>{buttonText}</button>*/}\n                {/*<div className=\"todo-list\">*/}\n                {/*    {toDoItems}*/}\n                {/*</div>*/}\n                {/*<div className=\"jokes-list\">*/}\n                {/*    <h3>{jokeComponents}</h3>*/}\n                {/*</div>*/}\n                <div className=\"products-list\">\n                    {projectComponents}\n                </div>\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}